#!/usr/bin/python3

import logging
import os

from distutils.spawn import find_executable
from mco_agent import Agent, action, dispatch, register_actions
from puppet_env_manager.config import EnvironmentManagerConfig
from puppet_env_manager.exceptions import EnvironmentManagerException
from puppet_env_manager.manager import EnvironmentManager


@register_actions
class PuppetEnv(Agent):

    PATH = '/usr/bin:/usr/sbin:/bin:/sbin'

    def should_activate(self):
        pem_exe = find_executable('puppet-env-manager', os.environ.get('PATH', self.PATH))
        if pem_exe is None:
            self.logger.debug("Did not find puppet-env-manager, disabling")
            return False
        else:
            self.logger.debug("Found puppet-env-manager at {0}, enabling".format(pem_exe))
            return True

    @action
    def update_all(self):
        """ Updates all puppet environments on a puppetserver
        """
        # Since py-mco-agent disables all logging by default
        # Re-enable logging for the environment manager library
        logging.getLogger('.').setLevel(self.logger.getEffectiveLevel())
        logging.getLogger('puppet_env_manager').setLevel(self.logger.getEffectiveLevel())

        # Librarian requires some environment variables be set
        os.environ.setdefault('HOME', '/root')
        os.environ.setdefault('PATH', self.PATH)

        self.logger.debug("Loading PEM configuration")
        config_file = self.config.get('config_file', '/etc/puppet-env-manager/config.yaml')
        pem_config = EnvironmentManagerConfig(path=config_file)
        pem_config.load()

        manager = EnvironmentManager(**pem_config.get_config())

        self.logger.debug("Starting update_all")
        results = manager.update_all_environments(force=self.request.data.get('force', False))
        self.reply.data = results
        self.logger.debug("Finished update_all")


    @action
    def update(self):
        """ Updates a single puppet environment on a puppetserver
        """
        # Since py-mco-agent disables all logging by default
        # Re-enable logging for the environment manager library
        logging.getLogger('.').setLevel(self.logger.getEffectiveLevel())
        logging.getLogger('puppet_env_manager').setLevel(self.logger.getEffectiveLevel())

        # Librarian requires some environment variables be set
        os.environ.setdefault('HOME', '/root')
        os.environ.setdefault('PATH', self.PATH)

        self.logger.debug("Loading PEM configuration")
        config_file = self.config.get('config_file', '/etc/puppet-env-manager/config.yaml')
        pem_config = EnvironmentManagerConfig(path=config_file)
        pem_config.load()

        manager = EnvironmentManager(**pem_config.get_config())
        environment = self.request.data.get('environment')

        self.logger.debug("Starting update of {0}".format(environment))
        try:
            manager.update_single_environment(
                    environment=environment,
                    force=self.request.data.get('force', False))

            if self.request.data.get('clean', False):
                manager.cleanup_environments()

        except EnvironmentManagerException as ex:
            self.reply.statuscode = 5
            self.reply.statusmsg = 'Error updating environment: {0}'.format(str(ex))

        self.logger.debug("Finished update of {0}".format(environment))


if __name__ == '__main__':
    dispatch(PuppetEnv)
